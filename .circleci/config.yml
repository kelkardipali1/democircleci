# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
orbs:
#  aws-eks: circleci/aws-eks@1.0.0
  kubernetes: circleci/kubernetes@0.11.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/democircleci

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # Build app
      - run: gradle clean build
      - persist_to_workspace:
          root: ~/democircleci
          paths:
            - Dockerfile
            - build
  build_docker:
    environment:
      DOCKER_FILE: "Dockerfile"
      SERVICE: "democircle"
    working_directory: ~/democircleci
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - kubernetes/install
      - attach_workspace:
          at: ~/democircleci
      - run:
          name: Build Docker image
          command:  docker build --file ${DOCKER_FILE} -t image .
      - run:
          name: get env from context
          command: echo $NEXUS_USER
      - run:
          name: install aws cli
          command: curl "https://s3.amazonaws.com/aws-cli/awscli-bundle-1.16.312.zip" -o "awscli-bundle.zip" && unzip awscli-bundle.zip && sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: configure aws
          command: aws --version && aws configure set aws_access_key_id $AWS_ACCESS_KEY && aws configure set aws_secret_access_key $AWS_SECRET_KEY && aws configure set default.region ap-south-1 && aws configure list
      - run:
          name: get kubeconfig
          command: aws eks update-kubeconfig --name infra-catalyst-central --region ap-south-1
#      - run:
#          name: install kubectl
#          command: curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - run:
          name: verify cluster
          command: kubectl get pods -A
      - run:
          name: docker tag
          command: docker tag image registry.hosted/repository/service-starter-docker-hosted/${SERVICE}:latest
#  aws_cli_example:
#    working_directory: ~/democircleci
#    executor: aws-cli/default
#    steps:
#      - checkout
#      - aws-cli/setup:
#          profile-name: example
#      - run:
#          name: aws configurations
#          command: aws --version
#orbs:
#  aws-cli: circleci/aws-cli@1.18.192


workflows:
  version: 2
  build_circleci:
    jobs:
      - build:
          context:
            - project_secrets
          filters:
            branches:
              only: circleci-project-setup
      - build_docker:
          context:
            - project_secrets
          requires:
            - build
          filters:
            branches:
              only: circleci-project-setup

